// I have 4 classes: bicycle, car, main, vehicle
//inheritance = process where one class acquires,
//              the attributes and methods of another.
/*******************************
//This is first class
public class Vehicle {
    //This is like the ancestor
    double speed;
    void go() {
        System.out.print("This vehicle is moving.");
    }
    
    void stop() {
        System.out.println("This vehicle is stopped.");
    }
}

/************************************
//Second class
public class Car extends Vehicle{
    
}
/************************************
//Third class
public class Bicycle extends Vehicle{
    
}
/***********************************
//The main class
public class Main {
    public static void main(String[] args) {
        
        Car car = new car();
        
        car.go();
    }
}
//Output: This vehicle is moving
//this means it have speed, and all thats in vehicle class
/******************************************
//What if we change Main class like this:

public class Main {
    public static void main(String[] args) {
        
        //Car car = new car();
        //car.go();

        Bicycle bike = new Bicycle();
        bike.stop();
    }
}
//Output: The vehicle is stopped 
//this means it have speed, and all thats in vehicle class

/*****************************************

public class Main {
    public static void main(String[] args) {
        
        Car car = new car();
        
        Bicycle bike = new Bicycle();
        
        System.out.println(car.speed);
        System.out.println(bike.speed);
    }
}
//Output: 0.0
//        0.0

/***************************************************

//benefit 1 is that we do not have to repeat everything
//benefit 2 is that we can change car and bicycle to have different aspects example below: 

public class Bicycle extends Vehicle{
    int wheels = 2;
    int pedals = 2;
}

//----------------------------------

public class Car extends Vehicle{
    int wheels = 4;
    int doors = 4;
}

//------------------------------------
public class Main {
    public static void main(String[] args) {
        
        Car car = new car();
        
        Bicycle bike = new Bicycle();
        
        System.out.println(car.doors);
        System.out.println(bike.pedals);
    }
}
//Output: 4
//        2

//If we use car.pedals then it won't be recognised because it's only unique to bicycle class
//While bike doesn't have doors 

//conclusion:
//    inheritance is used when there are common aspects that both car class and bike class shares 
